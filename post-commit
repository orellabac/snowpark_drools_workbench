#!/bin/bash
HERE="$(cd "$(dirname "$0")" && pwd)"
echo "$HERE " >> $HERE/log.txt
# Define a temporary folder to store the latest changes
TEMP_FOLDER=$(mktemp -d -t git-changes-XXXXXX)
echo "TEMPFOLDER: $TEMP_FOLDER " >> $HERE/log.txt
# Get a list of all files in the repository, excluding `global/`
ALL_FILES=$(git ls-tree -r HEAD --name-only | grep -v "^global/")
echo "$ALL_FILES " >> $HERE/log.txt
cp /opt/pom.xml $TEMP_FOLDER

# Get the latest commit hash
LATEST_COMMIT=$(git rev-parse HEAD)

# Loop through each file and extract its content
mkdir -p "$TEMP_FOLDER/src/main/resources/rules/"
for file in $ALL_FILES; do
    # Construct the target directory under TEMP_FOLDER
    TARGET_DIR="$TEMP_FOLDER/$(dirname "$file")"
    
    # Ensure the target directory exists
    mkdir -p "$TARGET_DIR"

    # Extract file contents from the commit and save it in the correct path
    git show "$LATEST_COMMIT:$file" > "$TEMP_FOLDER/$file"
    echo "$file" >> $TEMP_FOLDER/src/main/resources/rules/rules.txt
done

cp /opt/pom.xml $TEMP_FOLDER
cd $TEMP_FOLDER
export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-11.0.23.0.9-2.el7_9.x86_64
mvn package >> $HERE/log.txt

echo "PUT file://$TEMP_FOLDER/target/demo-1.0.jar @rules auto_compress=False overwrite=True"  > $TEMP_FOLDER/deploy.sql
cat $TEMP_FOLDER/target/generated-sources/handlers/registrations.sql  >> $TEMP_FOLDER/deploy.sql

# Upload the files to Snowflake
# and perform all handlers registration
/opt/snowsql -f deploy.sql  >> log.txt 2>&1
echo "Entire repository extracted to: $TEMP_FOLDER" >> $HERE/log.txt

echo "All changed files have been uploaded to Snowflake." >> log.txt
